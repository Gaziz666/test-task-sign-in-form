{"version":3,"sources":["assets/fonts/Roboto-Medium.ttf","assets/fonts/Roboto-Regular.ttf","components/modal/styles.ts","components/modal/index.tsx","components/title/styles.ts","components/title/Title.tsx","containers/formModal/styles.ts","components/button/styles.ts","components/button/index.tsx","components/icons/checked.tsx","components/icons/dropDownIcon.tsx","components/checkBox/styles.ts","components/checkBox/index.tsx","components/dropdown/styles.ts","components/dropdown/dropdown.tsx","components/dropdown/dropdownItem.tsx","containers/languageSelectField/index.tsx","components/input/styles.ts","components/input/index.tsx","containers/inputField/index.tsx","containers/formModal/index.tsx","containers/pageLayout/styles.ts","containers/mainHeader/styles.ts","containers/mainHeader/index.tsx","containers/pageLayout/index.tsx","pages/mainPage/styles.ts","pages/mainPage/StartPage.tsx","pages/mainPage/index.tsx","App.tsx","index.tsx"],"names":["Container","styled","div","isOpen","WrapperCenter","Overlay","Modal","children","onClose","onClick","center","Heading","h2","size","Title","ColumnContainer","DescriptionContainer","Description","span","Link","a","StyledButton","button","disable","Button","type","Checked","width","height","viewBox","fill","xmlns","d","id","maskUnits","x","y","mask","DropDownIcon","Input","input","Label","label","Rect","LabelText","CheckBox","value","htmlFor","isVisible","ListContainer","ul","ListItem","li","Dropdown","placeholder","name","useState","setIsVisible","prev","DropdownItem","langData","lang","LanguageSelectField","onChange","map","item","e","StyledInput","ErrorMessage","forwardRef","innerRef","tabindex","error","ref","InputField","field","errors","form","getIn","SignUpSchema","Yup","shape","required","matches","email","phone","FormModal","open","useParams","history","useHistory","setIsOpen","selectedLang","setSelectedLang","useEffect","handaleLangSelect","sendData","values","setSubmitting","console","log","push","initialValues","onSubmit","validationSchema","props","component","Object","keys","length","Header","Body","MainHeader","PageLayout","ButtonWrapper","StartPage","path","useRouteMatch","MainPage","exact","App","render","to","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.509279a6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Roboto-Medium.7429a63c.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-Regular.a8d6ac03.ttf\";","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  visibility: ${({ isOpen }) => (isOpen ? 'visible' : 'hidden')};\n  transition: all 0.3s ease;\n  z-index: 100;\n`\nexport const WrapperCenter = styled.div`\n  margin: auto;\n  z-index: 2;\n  background: #ffffff;\n  box-shadow: 0px 12px 24px rgba(44, 39, 56, 0.02),\n    0px 32px 64px rgba(44, 39, 56, 0.04);\n  border-radius: 24px;\n  padding: 1.9rem 2.5rem;\n  min-width: 460px;\n\n  @media (max-width: 460px) {\n    & {\n      min-width: 360px;\n    }\n  }\n`\n\nexport const Overlay = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n`\n","import React from 'react'\nimport { Container, Overlay, WrapperCenter } from './styles'\n\ntype IModal = {\n  children: React.ReactNode\n  isOpen: boolean\n  onClose: React.Dispatch<React.SetStateAction<boolean>>\n}\nexport const Modal: React.FC<IModal> = ({ children, isOpen, onClose }) => {\n  return (\n    <Container isOpen={isOpen}>\n      <WrapperCenter>{children}</WrapperCenter>\n      <Overlay onClick={() => onClose(false)} />\n    </Container>\n  )\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: ${({ center }) => (center ? 'center' : 'flex-start')};\n`\n\nexport const Heading = styled.h2`\n  font-size: ${({ size }) => (size ? size : '2.75rem')};\n  font-weight: bold;\n  font-size: 2.1rem;\n`\n","import React from 'react'\nimport { Container, Heading } from './styles'\n\ntype ITitle = {\n  children: React.ReactNode\n  size?: string\n  center?: boolean\n}\n\nexport const Title: React.FC<ITitle> = ({ children, size, center = true }) => {\n  return (\n    <Container center={center}>\n      <Heading size={size}>{children}</Heading>\n    </Container>\n  )\n}\n","import styled from 'styled-components'\n\nexport const ColumnContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  margin-top: 1.65rem;\n  width: 100%;\n\n  & > div {\n    margin-bottom: 1rem;\n  }\n`\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const DescriptionContainer = styled.div``\n\nexport const Description = styled.span`\n  font-weight: normal;\n  line-height: 1.4rem;\n  color: #2c2738;\n`\n\nexport const Link = styled.a`\n  line-height: 1.4rem;\n  color: #0880ae;\n  cursor: pointer;\n`\n","import styled from 'styled-components'\n\nexport const StyledButton = styled.button<{ disable: boolean }>`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0.5rem 1rem;\n  text-decoration: none;\n  text-align: center;\n  line-height: 1.5rem;\n  font-weight: lighter;\n  outline: none;\n  white-space: nowrap;\n  font-size: 1rem;\n  border: none;\n  border-radius: 6px;\n  background: ${({ disable }) => (disable ? '#DBE2EA' : '#0880ae')};\n  color: ${({ disable }) => (disable ? '#B1B5BF' : '#ebf4f8')};\n  cursor: pointer;\n  transition: transform 0.3s ease;\n  min-width: 180px;\n  min-height: 56px;\n  box-shadow: 0px 2px 4px rgba(44, 39, 56, 0.08),\n    0px 4px 8px rgba(44, 39, 56, 0.08);\n  width: 100%;\n\n  &:hover {\n    -webkit-box-shadow: 0px 12px 24px rgba(44, 39, 56, 0.08),\n      0px 24px 48px rgba(44, 39, 56, 0.16);\n    box-shadow: 0px 12px 24px rgba(44, 39, 56, 0.08),\n      0px 24px 48px rgba(44, 39, 56, 0.16);\n    transform: scale(1.05);\n  }\n\n  &:active {\n    border: 2px solid rgba(44, 39, 56, 0.86);\n  }\n\n  &:disabled {\n    background: #dbe2ea;\n    box-shadow: 0px 4px 8px rgba(44, 39, 56, 0.08);\n    color: #2c2738;\n    opacity: 0.5;\n  }\n`\n","import React from 'react'\nimport { StyledButton } from './styles'\n\ntype IButton = {\n  children: React.ReactNode\n  onClick?: () => void\n  type?: 'button' | 'submit' | 'reset'\n  disable?: boolean\n}\n\nexport const Button: React.FC<IButton> = ({\n  children,\n  onClick,\n  type,\n  disable = false\n}) => {\n  return (\n    <StyledButton disable={disable} onClick={onClick} type={type}>\n      {children}\n    </StyledButton>\n  )\n}\n","import React from 'react'\n\nexport const Checked: React.FC = () => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M18.6343 6.63434C18.9467 6.32192 19.4533 6.32192 19.7657 6.63434C20.0781 6.94676 20.0781 7.45329 19.7657 7.76571L10.1657 17.3657C9.85325 17.6781 9.34672 17.6781 9.0343 17.3657L5.0343 13.3657C4.72188 13.0533 4.72188 12.5468 5.0343 12.2343C5.34672 11.9219 5.85325 11.9219 6.16567 12.2343L9.59999 15.6687L18.6343 6.63434Z\"\n        fill=\"black\"\n      />\n      <mask\n        id=\"mask0_1:398\"\n        // style=\"mask-type:alpha\"\n        maskUnits=\"userSpaceOnUse\"\n        x=\"4\"\n        y=\"6\"\n        width=\"16\"\n        height=\"12\"\n      >\n        <path\n          d=\"M18.6343 6.63434C18.9467 6.32192 19.4533 6.32192 19.7657 6.63434C20.0781 6.94676 20.0781 7.45329 19.7657 7.76571L10.1657 17.3657C9.85325 17.6781 9.34672 17.6781 9.0343 17.3657L5.0343 13.3657C4.72188 13.0533 4.72188 12.5468 5.0343 12.2343C5.34672 11.9219 5.85325 11.9219 6.16567 12.2343L9.59999 15.6687L18.6343 6.63434Z\"\n          fill=\"white\"\n        />\n      </mask>\n      <g mask=\"url(#mask0_1:398)\">\n        <rect width=\"24\" height=\"24\" fill=\"#0880AE\" />\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\nexport const DropDownIcon: React.FC = () => {\n  return (\n    <svg\n      width=\"30\"\n      height=\"30\"\n      viewBox=\"0 0 30 30\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M15 17.5858L21.2929 11.2929C21.6834 10.9024 22.3166 10.9024 22.7071 11.2929C23.0976 11.6834 23.0976 12.3166 22.7071 12.7071L15.7071 19.7071C15.3166 20.0976 14.6834 20.0976 14.2929 19.7071L7.29289 12.7071C6.90237 12.3166 6.90237 11.6834 7.29289 11.2929C7.68342 10.9024 8.31658 10.9024 8.70711 11.2929L15 17.5858Z\"\n        fill=\"black\"\n      />\n      <mask\n        id=\"mask0_1:327\"\n        maskUnits=\"userSpaceOnUse\"\n        x=\"7\"\n        y=\"11\"\n        width=\"16\"\n        height=\"9\"\n      >\n        <path\n          d=\"M15 17.5858L21.2929 11.2929C21.6834 10.9024 22.3166 10.9024 22.7071 11.2929C23.0976 11.6834 23.0976 12.3166 22.7071 12.7071L15.7071 19.7071C15.3166 20.0976 14.6834 20.0976 14.2929 19.7071L7.29289 12.7071C6.90237 12.3166 6.90237 11.6834 7.29289 11.2929C7.68342 10.9024 8.31658 10.9024 8.70711 11.2929L15 17.5858Z\"\n          fill=\"white\"\n        />\n      </mask>\n      <g mask=\"url(#mask0_1:327)\">\n        <rect width=\"30\" height=\"30\" fill=\"#0880AE\" />\n      </g>\n    </svg>\n  )\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: inline-flex;\n  flex-direction: row;\n  align-items: flex-start;\n`\n\nexport const Input = styled.input`\n  opacity: 0;\n  width: 0;\n  height: 0;\n\n  &:checked + label span:first-child {\n    border: 2px solid #0880ae;\n    & svg {\n      opacity: 1;\n    }\n  }\n`\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`\n\nexport const Rect = styled.span`\n  display: inline-block;\n  overflow: hidden;\n  width: 28px;\n  height: 28px;\n  background: #ffffff;\n  border: 1px solid #dbe2ea;\n  box-sizing: border-box;\n  box-shadow: 0px 4px 8px rgba(44, 39, 56, 0.04);\n  border-radius: 4px;\n  margin-right: 0.5rem;\n\n  & svg {\n    opacity: 0;\n  }\n`\n\nexport const LabelText = styled.span`\n  color: #756f86;\n`\n","import React from 'react'\nimport { Checked } from '../icons'\nimport { Container, Input, Label, LabelText, Rect } from './styles'\n\ntype CheckboxT = {\n  label: React.ReactNode\n  value: string\n  id: string\n}\n\nexport const CheckBox: React.FC<CheckboxT> = ({ label, value, id }) => {\n  return (\n    <Container>\n      <Input type=\"checkbox\" value={value} id={id} />\n      <Label htmlFor={id}>\n        <Rect>\n          <Checked />\n        </Rect>\n        <LabelText>{label}</LabelText>\n      </Label>\n    </Container>\n  )\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`\n\nexport const Label = styled.span`\n  line-height: 1.5rem;\n  color: #756f86;\n`\nexport const StyledButton = styled.button<{ isVisible: boolean }>`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: #ffffff;\n  border: ${({ isVisible }) =>\n    isVisible ? '2px solid #0880AE' : '1px solid #dbe2ea'};\n  box-sizing: border-box;\n  box-shadow: 0px 4px 8px rgba(44, 39, 56, 0.04);\n  border-radius: 6px;\n  font-size: 1rem;\n  width: 100%;\n\n  cursor: pointer;\n\n  & span {\n    padding: 1rem 1rem;\n    text-decoration: none;\n    text-align: left;\n    outline: none;\n    white-space: nowrap;\n    font-size: 1rem;\n    line-height: 1.5rem;\n    display: inline-block;\n    color: #2c2738;\n  }\n`\n\nexport const ListContainer = styled.ul`\n  position: absolute;\n  top: 105%;\n  left: 0;\n  z-index: 3;\n  background: #ffffff;\n  border: 1px solid #dbe2ea;\n  box-sizing: border-box;\n  box-shadow: 0px 4px 8px rgba(44, 39, 56, 0.04),\n    0px 20px 20px rgba(44, 39, 56, 0.04);\n  border-radius: 6px;\n  max-height: 12rem;\n  width: 100%;\n  overflow-y: auto;\n  overflow-x: hidden;\n`\nexport const ListItem = styled.li`\n  background: #fff;\n  color: #756f86;\n  padding: 1rem;\n  cursor: pointer;\n\n  &:hover {\n    background: #ebf4f8;\n  }\n`\n\nexport const Overlay = styled.div<{ isVisible: boolean }>`\n  visibility: ${({ isVisible }) => (isVisible ? 'visible' : 'hidden')};\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  z-index: 2;\n`\n","import React, { useState } from 'react'\nimport { DropDownIcon } from '../icons'\nimport {\n  Container,\n  Label,\n  StyledButton,\n  ListContainer,\n  Overlay\n} from './styles'\n\ntype TDropDown = {\n  label: string\n  placeholder?: string | number\n  value?: string\n  children?: React.ReactNode\n  name: string\n}\n\nexport const Dropdown: React.FC<TDropDown> = ({\n  label,\n  placeholder,\n  value,\n  children,\n  name\n}) => {\n  const [isVisible, setIsVisible] = useState<boolean>(false)\n\n  const showList = () => {\n    setIsVisible((prev) => !prev)\n  }\n\n  return (\n    <>\n      <Container>\n        <Label>{label}</Label>\n        <StyledButton isVisible={isVisible} onClick={showList} type=\"button\">\n          <span>{value || placeholder || name}</span>\n          <DropDownIcon />\n        </StyledButton>\n        {isVisible && (\n          <ListContainer onClick={() => setIsVisible((prev) => !prev)}>\n            {children}\n          </ListContainer>\n        )}\n      </Container>\n      <Overlay isVisible={isVisible} onClick={() => setIsVisible(false)} />\n    </>\n  )\n}\n","import React from 'react'\nimport { ListItem } from './styles'\n\ntype TListItem = {\n  onClick?: (e: React.SyntheticEvent) => void\n  value: string | number\n  children: string | number\n}\nexport const DropdownItem: React.FC<TListItem> = ({\n  onClick,\n  value,\n  children\n}) => {\n  return (\n    <ListItem value={value} onClick={onClick}>\n      {children}\n    </ListItem>\n  )\n}\n","import React from 'react'\nimport { ILanguage } from '../../@types/styled'\nimport { Dropdown, DropdownItem } from '../../components/dropdown'\n\ntype TLanguageSelectField = {\n  name: string\n  onChange: (value: ILanguage) => void\n  label: string\n  placeholder: string\n  value: string\n}\n\nconst langData = [\n  { id: 1, lang: 'Русский' },\n  { id: 2, lang: 'Английский' },\n  { id: 3, lang: 'Китайский' },\n  { id: 4, lang: 'Испанский' }\n]\n\nexport const LanguageSelectField: React.FC<TLanguageSelectField> = ({\n  label,\n  name,\n  placeholder,\n  onChange,\n  value\n}) => {\n  return (\n    <Dropdown label={label} name={name} value={value} placeholder={placeholder}>\n      {langData.map((item) => (\n        <DropdownItem\n          value={item.lang}\n          key={item.id}\n          onClick={(e) => onChange(item)}\n        >\n          {item.lang}\n        </DropdownItem>\n      ))}\n    </Dropdown>\n  )\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: start;\n  width: 100%;\n`\n\nexport const StyledInput = styled.input`\n  padding: 1rem 1rem;\n  text-decoration: none;\n  text-align: left;\n  outline: none;\n  white-space: nowrap;\n  font-size: 1rem;\n  line-height: 1.5rem;\n  border: 1px solid #dbe2ea;\n  box-sizing: border-box;\n  box-shadow: 0px 4px 8px rgba(44, 39, 56, 0.04);\n  border-radius: 6px;\n  background: #fff;\n  color: #2c2738;\n  width: 100%;\n\n  &:focus {\n    border: 2px solid #0880ae;\n  }\n\n  &::placeholder {\n    color: #7c9cbf;\n  }\n`\n\nexport const Label = styled.label`\n  line-height: 1.5rem;\n  color: #756f86;\n  margin-bottom: 8px;\n`\nexport const ErrorMessage = styled.span`\n  margin-top: 0.5rem;\n  display: block;\n  font-size: 0.8rem;\n  line-height: 1.1rem;\n  color: #ff7171;\n`\n","import { Field } from 'formik'\nimport React, { forwardRef } from 'react'\nimport { StyledInput, Container, Label, ErrorMessage } from './styles'\n\nexport type IInput = {\n  placeholder?: string\n  type?: string\n  onChange?: (e: React.FormEvent<HTMLInputElement>) => void\n  name: string\n  label: string\n  id?: string\n  value?: string\n  tabindex?: string\n  error?: string\n}\n\ntype Ref = HTMLInputElement\n\nexport const Input = forwardRef<Ref, IInput>(\n  (\n    {\n      placeholder,\n      type = 'text',\n      onChange,\n      name,\n      label,\n      id,\n      value,\n      tabindex,\n      error\n    },\n    innerRef\n  ) => {\n    return (\n      <Container>\n        <Label htmlFor={id}>{label || placeholder}</Label>\n        <StyledInput\n          placeholder={placeholder}\n          type={type}\n          onChange={onChange}\n          id={id}\n          name={name}\n          value={value}\n          tabindex={tabindex}\n          ref={innerRef}\n        />\n        {error && <ErrorMessage>{error}</ErrorMessage>}\n      </Container>\n    )\n  }\n)\n","import React from 'react'\nimport { getIn } from 'formik'\n\nimport { IInput, Input } from '../../components/input'\n\ntype TInputField = {\n  field: {\n    name: string\n    value: string\n    onChange: (e: React.FormEvent<HTMLInputElement>) => void\n    onBlur: (e: React.BlockquoteHTMLAttributes<HTMLInputElement>) => void\n  }\n  form: {\n    errors?: { [key: string]: string }\n  }\n}\n\nconst InputField: React.FC<IInput & TInputField> = ({\n  field,\n  form: { errors },\n  placeholder,\n  label,\n  id,\n  tabindex,\n  type\n}) => {\n  const error = getIn(errors, field!.name)\n  return (\n    <Input\n      placeholder={placeholder}\n      label={label}\n      type={type}\n      id={id}\n      tabindex={tabindex}\n      error={error}\n      {...field}\n    />\n  )\n}\n\nexport default InputField\n","import React, { useState, useEffect, useRef, createRef } from 'react'\nimport { useParams, useHistory } from 'react-router'\nimport { Formik, Field, Form, FormikHelpers, FormikProps } from 'formik'\nimport * as Yup from 'yup'\n\nimport { Modal } from '../../components/modal'\nimport { Title } from '../../components/title'\nimport {\n  ColumnContainer,\n  Container,\n  DescriptionContainer,\n  Description,\n  Link\n} from './styles'\nimport { Button } from '../../components/button'\nimport { CheckBox } from '../../components/checkBox'\nimport { LanguageSelectField } from '../languageSelectField'\nimport { ILanguage } from '../../@types/styled'\nimport InputField from '../inputField'\n\ntype IParam = {\n  open?: string\n}\n\nexport type IValue = {\n  name: string\n  email: string\n  phone: string\n  lang: string\n}\n\nconst SignUpSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('обязательно для заполнения')\n    .matches(\n      /^([-A-Za-zА-Яа-я ])+$/,\n      'Имя может содержать только буквы, дефис и пробел'\n    ),\n  email: Yup.string()\n    .required('обязательно для заполнения')\n    .email('Введено не корректное значение'),\n  phone: Yup.string()\n    .required('обязательно для заполнения')\n    .matches(/^([-0-9()+])+$/, 'номер может содержать только цифры (,),-,+')\n})\n\nexport const FormModal: React.FC = () => {\n  const { open } = useParams<IParam>()\n  const history = useHistory()\n  const [isOpen, setIsOpen] = useState<boolean>(false)\n  const [selectedLang, setSelectedLang] = useState<ILanguage | null>(null)\n\n  useEffect(() => {\n    if (open === 'open') setIsOpen(true)\n  }, [open])\n\n  const initialValue = {\n    name: '',\n    email: '',\n    phone: '',\n    lang: ''\n  }\n\n  const handaleLangSelect = (item: ILanguage) => {\n    setSelectedLang(item)\n  }\n\n  const sendData = async (\n    values: IValue,\n    { setSubmitting }: FormikHelpers<IValue>\n  ) => {\n    if (!selectedLang) {\n      return\n    }\n    values.lang = selectedLang.lang\n    console.log('value', values)\n  }\n\n  const closeModal = () => {\n    history.push('/')\n    setIsOpen(false)\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={closeModal}>\n      <Title center={false}>Регистрация</Title>\n      <DescriptionContainer>\n        <Description>Уже есть аккаунт? </Description>\n        <Link>Войти</Link>\n      </DescriptionContainer>\n\n      <Formik\n        initialValues={initialValue}\n        onSubmit={sendData}\n        validationSchema={SignUpSchema}\n      >\n        {(props: FormikProps<IValue>) => (\n          <Form>\n            <Container>\n              <ColumnContainer>\n                <Field\n                  placeholder={'Введите Ваше имя'}\n                  label=\"Имя\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  component={InputField}\n                  tabindex=\"1\"\n                />\n                <Field\n                  placeholder={'Введите Ваш email'}\n                  type=\"email\"\n                  name=\"email\"\n                  label=\"Email\"\n                  id=\"email\"\n                  component={InputField}\n                  tabindex=\"2\"\n                />\n                <Field\n                  placeholder={'Введите номер телефона'}\n                  type=\"text\"\n                  name=\"phone\"\n                  label=\"Номер телефона\"\n                  id=\"phone\"\n                  component={InputField}\n                  tabindex=\"3\"\n                />\n\n                <LanguageSelectField\n                  value={selectedLang ? selectedLang!.lang : ''}\n                  name=\"lang\"\n                  placeholder=\"Язык\"\n                  label=\"Язык\"\n                  onChange={handaleLangSelect}\n                />\n                <CheckBox\n                  label={\n                    <>\n                      Принимаю <Link>условия</Link> использования\n                    </>\n                  }\n                  id=\"chackbox\"\n                  value=\"sdf\"\n                />\n              </ColumnContainer>\n              <Button\n                disable={\n                  selectedLang\n                    ? Object.keys(props.errors).length === 0\n                      ? false\n                      : true\n                    : true\n                }\n                type=\"submit\"\n              >\n                Зарегистрироваться\n              </Button>\n            </Container>\n          </Form>\n        )}\n      </Formik>\n    </Modal>\n  )\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  min-height: 100vh;\n  background-color: #fff;\n`\nexport const Header = styled.div`\n  height: 3rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  color: #fff;\n  background-color: #113cfc;\n`\nexport const Body = styled.div`\n  flex: 1;\n  height: 100%;\n  width: 100%;\n  overflow: auto;\n  display: flex;\n  flex-direction: column;\n`\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n`\n","import { Title } from '../../components/title'\nimport React from 'react'\nimport { Container } from './styles'\n\nexport const MainHeader: React.FC = () => {\n  return (\n    <Container>\n      <Title>My test App</Title>\n    </Container>\n  )\n}\n","import React from 'react'\nimport { Container, Header, Body } from './styles'\nimport { MainHeader } from '../../containers/mainHeader'\n\ninterface IPageLayout {\n  children: React.ReactNode\n}\n\nexport const PageLayout: React.FC = ({ children }) => {\n  return (\n    <Container>\n      <Header>\n        <MainHeader />\n      </Header>\n      <Body>{children}</Body>\n    </Container>\n  )\n}\n","import styled from 'styled-components'\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  margin: auto;\n`\n","import React from 'react'\nimport { useHistory, useRouteMatch } from 'react-router'\nimport { Button } from '../../components/button'\nimport { ButtonWrapper } from './styles'\n\nexport const StartPage: React.FC = () => {\n  const { path } = useRouteMatch()\n  const history = useHistory()\n  return (\n    <ButtonWrapper>\n      <Button onClick={() => history.push(`${path}/open`)}>Open Form</Button>\n    </ButtonWrapper>\n  )\n}\n","import React from 'react'\nimport { Switch, Route, useRouteMatch } from 'react-router-dom'\nimport { FormModal } from '../../containers/formModal'\nimport { PageLayout } from '../../containers/pageLayout'\nimport { StartPage } from './StartPage'\n\nexport const MainPage: React.FC = () => {\n  const { path } = useRouteMatch()\n  return (\n    <PageLayout>\n      <Switch>\n        <Route exact path={`${path}`} component={StartPage} />\n        <Route exact path={`${path}/:open`} component={FormModal} />\n      </Switch>\n    </PageLayout>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { MainPage } from './pages/mainPage'\n\nexport const App: React.FC = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" render={() => <Redirect to=\"/form\" />} />\n      <Route path=\"/form\" component={MainPage} />\n    </Switch>\n  )\n}\n","import React from 'react'\n\nimport ReactDOM from 'react-dom'\nimport { HashRouter as Router } from 'react-router-dom'\n\nimport './styles/index.css'\nimport './assets/fonts/Roboto-Medium.ttf'\nimport './assets/fonts/Roboto-Regular.ttf'\nimport { App } from './App'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}